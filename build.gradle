plugins {
    id 'java-library'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.165'
}

version = mod_version
group = mod_group_id

base {
    archivesName = "${mod_id}-${minecraft_version}"
}

// Mojang ships Java 21 to end users starting in 1.20.5, so mods should target Java 21.
java.toolchain.languageVersion = JavaLanguageVersion.of(21)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

//minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')
//minecraft.accessTransformers.entry public net.minecraft.client.Minecraft textureManager # textureManager

// Default run configurations.
// These can be tweaked, removed, or duplicated as needed.
runs {
    // applies to all the run configs below
    configureEach {
        // Recommended logging data for a userdev environment
        // The markers can be added/remove as needed separated by commas.
        // "SCAN": For mods scan.
        // "REGISTRIES": For firing of registry events.
        // "REGISTRYDUMP": For getting the contents of all registries.
        systemProperty 'forge.logging.markers', 'REGISTRIES'

        // Recommended logging level for the console
        // You can set various levels here.
        // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }

    client {
        // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    // This run config launches GameTestServer and runs all registered gametests, then exits.
    // By default, the server will crash when no gametests are provided.
    // The gametest system is also enabled by default for other run configs under the /test command.
    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        // example of overriding the workingDirectory set in configureEach above, uncomment if you want to use it
        // workingDirectory project.file('run-data')

        // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath(),
            '--existing-mod', 'alltheores',
            '--existing-mod', 'allthemodium',
            '--existing-mod', 'allthetweaks',
            '--existing-mod', 'ae2',
            '--existing-mod', 'appflux',
            '--existing-mod', 'botania',
            '--existing-mod', 'enderio_base',
            '--existing-mod', 'extendedae',
            '--existing-mod', 'megacells',
            '--existing-mod', 'pneumaticcraft',
            '--existing-mod', 'powah',
            '--existing-mod', 'productivebees',
            '--existing-mod', 'supplementaries',
            '--existing-mod', 'xycraft_world'
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

// Sets up a dependency configuration called 'localRuntime'.
// This configuration should be used instead of 'runtimeOnly' to declare
// a dependency that will be present for runtime testing but that is
// "optional", meaning it will not be pulled by dependents of this mod.
configurations {
    runtimeClasspath.extendsFrom localRuntime
}

repositories {
    mavenLocal()
    exclusiveContent {
        forRepository {repositories.mavenLocal()}
        forRepository {
            maven {
                name "CurseMaven"
                url "https://www.cursemaven.com"
            }
        }
        filter {
            includeGroup "curse.maven"
        }
    }
    maven {
        url "https://maven.permutated.net/snapshots"
    }
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"

    runtimeOnly "curse.maven:ato-405593:5553138"
    runtimeOnly "curse.maven:allthemodium-364466:5609842"
//    implementation "curse.maven:all-the-tweaks-364120:5539047"
    runtimeOnly "com.thevortex.allthetweaks:AllTheTweaks:2.4.2"
    runtimeOnly "curse.maven:geckolib-388172:5605715" // required by allthemodium
    runtimeOnly "curse.maven:productivebees-377897:5633300"
    runtimeOnly "curse.maven:applied-energistics-2-223794:5729094"
    runtimeOnly "curse.maven:mega-cells-622112:5662141"
    runtimeOnly "curse.maven:glodium-957920:5614731"
    runtimeOnly "curse.maven:ex-pattern-provider-892005:5770608"
    runtimeOnly "curse.maven:applied-flux-965012:5639620"
    runtimeOnly "curse.maven:pneumaticcraft-repressurized-281849:5721690"
//    runtimeOnly fg.deobf("curse.maven:supplementaries-412082:4591988")
//    runtimeOnly fg.deobf("curse.maven:selene-499980:4591863") // required by supplementaries
    implementation "curse.maven:powah-rearchitected-633483:5608949"
    runtimeOnly "curse.maven:cloth-config-348521:5424576" // required by powah
    runtimeOnly "curse.maven:architectury-api-419699:5521987" // required by powah
    runtimeOnly "curse.maven:ender-io-64578:5858187"
    implementation "curse.maven:xycraft-653786:5601037"
    implementation "curse.maven:xycraft-world-653789:5601038"
//    runtimeOnly fg.deobf("curse.maven:botania-225643:4900327")
//    runtimeOnly fg.deobf("curse.maven:curios-309927:4913335") // required by botania
//    runtimeOnly fg.deobf("curse.maven:patchouli-306770:4892162") // required by botania

    runtimeOnly "curse.maven:emi-580555:5619579"
    runtimeOnly "curse.maven:jade-324717:5639932"
}

// This block of code expands all declared replace properties in the specified resource targets.
// A missing property will result in an error. Properties are expanded using ${} Groovy notation.
// When "copyIdeResources" is enabled, this will also run before the game launches in IDE environments.
// See https://docs.gradle.org/current/dsl/org.gradle.language.jvm.tasks.ProcessResources.html
tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
        minecraft_version      : minecraft_version,
        minecraft_version_range: minecraft_version_range,
        neo_version            : neo_version,
        neo_version_range      : neo_version_range,
        loader_version_range   : loader_version_range,
        mod_id                 : mod_id,
        mod_name               : mod_name,
        mod_license            : mod_license,
        mod_version            : mod_version,
        mod_authors            : mod_authors,
        mod_description        : mod_description
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties
    }
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    // The settings below make sure that your build is reproducible
    // More information at https://docs.gradle.org/current/userguide/working_with_files.html#sec:reproducible_archives
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

// Example configuration to allow publishing using the maven-publish plugin
publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

// IDEA no longer automatically downloads sources/javadoc jars for dependencies, so we need to explicitly enable the behavior.
idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
